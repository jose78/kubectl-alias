# Copyright Â© 2025 Jose Clavero Anderica (jose.clavero.anderica@gmail.com)
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#, p.status.containerStatuses.message AS CONTAINER_MESSAGE, p.status.containerStatuses.reason AS CONTAINER_REASON 
# e.metadata.namespace AS NAMESPACE, e.regarding.name AS RESOURCE_NAME, e.message AS EVENT_MESSAGE, p.metadata.name AS POD_NAME
---
version: v1
aliases:
   events:
      short: Display the description of each pod and linked service.
      long: This query retrieves all information from the event table, providing a comprehensive view of system events. It can be used to monitor and troubleshoot the cluster by showing detailed information about pod and service-related events.
      sql: SELECT e.regarding.kind AS RESOURCE_TYPE, e.type as EVENT_TYPE_STATUS , e.regarding.name as event_resource_name , 
           p.metadata.name as pod_name, 
           p.status.containerStatuses[0].state.waiting.message as pod_Status_msg
           FROM event e, pod p
           WHERE e.regarding.name = p.metadata.name
   pod:
      short: Show the description of each pod and linked service.
      args:
         - POD_NAME
      long: |
        This complex query joins multiple Kubernetes resources to provide a detailed view of the pod ecosystem. It returns:
        The pod's namespace, prefixed with 'PEPE -> '
        The name of the node where the pod is running
        The name and UID of the ReplicaSet associated with the pod
        The pod's name
        This information is gathered by joining the pod, service, deployment, node, and ReplicaSet resources. It filters the results to show only pods that are associated with services and deployments based on label matching, and links pods to their respective nodes and ReplicaSets. This query is particularly useful for understanding the relationships between different Kubernetes resources and troubleshooting deployment issues.
      sql: |
          SELECT 'PEPE   -> ' || p.metadata.namespace as NAMESPACE , n.metadata.name as NODE_NAME , rs.metadata.name RS_NAME, rs.metadata.uid RS_UID,  p.metadata.name POD_NAME
          FROM 
              pod p, svc s, deploy d , node n, rs 
          where p.metadata.labels.app = s.spec.selector.app 
          and d.metadata.labels.app = s.spec.selector.app  
          AND n.metadata.name = p.spec.nodeName and p.metadata.name like '%' || rs.metadata.name || '%' 
          and  p.metadata.name like '% POD_NAME %'
   pods:
      short: Show the description of each pod and linked service.
      long: |
        This complex query joins multiple Kubernetes resources to provide a detailed view of the pod ecosystem. It returns:
        The pod's namespace, prefixed with 'PEPE -> '
        The name of the node where the pod is running
        The name and UID of the ReplicaSet associated with the pod
        The pod's name
        This information is gathered by joining the pod, service, deployment, node, and ReplicaSet resources. It filters the results to show only pods that are associated with services and deployments based on label matching, and links pods to their respective nodes and ReplicaSets. This query is particularly useful for understanding the relationships between different Kubernetes resources and troubleshooting deployment issues.
      sql: |
          SELECT 'PEPE   -> ' || p.metadata.namespace as NAMESPACE , n.metadata.name as NODE_NAME , rs.metadata.name RS_NAME, rs.metadata.uid RS_UID,  p.metadata.name POD_NAME
          FROM 
              pod p, svc s, deploy d , node n, rs 
          where p.metadata.labels.app = s.spec.selector.app and 
          d.metadata.labels.app = s.spec.selector.app  AND 
          n.metadata.name = p.spec.nodeName and p.metadata.name like '%' || rs.metadata.name || '%'
