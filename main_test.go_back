package main

import (
	"os"
	"reflect"
	"testing"
)

func Test_selectQuery(t *testing.T) {
	type args struct {
		name string
	}
	tests := []struct {
		name    string
		args    args
		want    string
		wantErr bool
	}{
		{"retrieve the query", args{name: "ENV_EXIST"}, "data", false},
		{"retrieve the error", args{name: "NOT_ENV_EXIST"}, "", true},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if !tt.wantErr {
				os.Setenv("K_FCK_"+tt.args.name, tt.want)
			}
			got, err := selectQuery(tt.args.name)
			if (err != nil) != tt.wantErr {
				t.Errorf("selectQuery() error = %v, wantErr %v", err, tt.wantErr)
				return
			}
			if got != tt.want {
				t.Errorf("selectQuery() = %v, want %v", got, tt.want)
			}
			if !tt.wantErr {
				os.Unsetenv("K_FCK_" + tt.args.name)
			}
		})
	}
}

func Test_evaluateQuery(t *testing.T) {
	type args struct {
		query string
	}
	tests := []struct {
		name    string
		args    args
		want    sqlContainer
		wantErr bool
	}{
		{name: "Evaluate query", args: args{query: "SELECT id, name as name_user FROM users WHERE id = 10"},
			want: sqlContainer{sqlFrom: []string{"users"}, sqlWhere: "id = 10", sqlSelect: map[string]string{"id": "id", "NAME":"NAME_USER"}}, wantErr: false},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			got, err := evaluateQuery(tt.args.query)
			if (err != nil) != tt.wantErr {
				t.Errorf("evaluateQuery() error = %v, wantErr %v", err, tt.wantErr)
				return
			}
			if !reflect.DeepEqual(got, tt.want) {
				t.Errorf("evaluateQuery() = %v, want %v", got, tt.want)
			}
		})
	}
}






var jsonResult := ```
{
    "apiVersion": "v1",
    "items": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2024-10-23T09:45:18Z",
                "generateName": "test-b4b6cf8f6-",
                "labels": {
                    "app": "test",
                    "pod-template-hash": "b4b6cf8f6"
                },
                "name": "test-b4b6cf8f6-nsrsw",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "test-b4b6cf8f6",
                        "uid": "cdda94dc-5140-45f0-a2b5-755ef21802de"
                    }
                ],
                "resourceVersion": "122066",
                "uid": "fbea3800-2cf2-4216-b109-ad9fb3192bc9"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "name",
                                "value": "test"
                            }
                        ],
                        "image": "nginx",
                        "imagePullPolicy": "Always",
                        "name": "nginx",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-rphdr",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "kind-control-plane",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-rphdr",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-23T09:45:18Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-23T21:49:16Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-23T21:49:16Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-23T09:45:18Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://ec6d920c61f05618d85b202b80fd5817d5a9501a1ea465010c75c3a0dd60215d",
                        "image": "docker.io/library/nginx:latest",
                        "imageID": "docker.io/library/nginx@sha256:28402db69fec7c17e179ea87882667f1e054391138f77ffaf0c3eb388efc3ffb",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://cf0d4c05c24ac84012697ddae030960799b02fdce55dbc63624c21107a4221ea",
                                "exitCode": 255,
                                "finishedAt": "2024-10-23T21:49:08Z",
                                "reason": "Unknown",
                                "startedAt": "2024-10-23T09:45:20Z"
                            }
                        },
                        "name": "nginx",
                        "ready": true,
                        "restartCount": 1,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2024-10-23T21:49:15Z"
                            }
                        }
                    }
                ],
                "hostIP": "172.18.0.2",
                "phase": "Running",
                "podIP": "10.244.0.5",
                "podIPs": [
                    {
                        "ip": "10.244.0.5"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2024-10-23T09:45:18Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "creationTimestamp": "2024-10-22T19:44:13Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                },
                "name": "kubernetes",
                "namespace": "default",
                "resourceVersion": "195",
                "uid": "73353dd8-f950-41e9-b0de-f934cc698f65"
            },
            "spec": {
                "clusterIP": "10.96.0.1",
                "clusterIPs": [
                    "10.96.0.1"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "https",
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": 6443
                    }
                ],
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "creationTimestamp": "2024-10-23T21:50:54Z",
                "labels": {
                    "app": "test",
                    "version": "1.0"
                },
                "name": "test",
                "namespace": "default",
                "resourceVersion": "122206",
                "uid": "62719fd9-2318-4843-924a-72cb1057e7df"
            },
            "spec": {
                "clusterIP": "10.96.60.100",
                "clusterIPs": [
                    "10.96.60.100"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 8080,
                        "protocol": "TCP",
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "app": "test"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2"
                },
                "creationTimestamp": "2024-10-23T06:50:36Z",
                "generation": 2,
                "labels": {
                    "app": "test",
                    "version": "1.0"
                },
                "name": "test",
                "namespace": "default",
                "resourceVersion": "65792",
                "uid": "f2154744-8908-4389-bae9-9a4bdd748f35"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "test"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "test"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "name",
                                        "value": "test"
                                    }
                                ],
                                "image": "nginx",
                                "imagePullPolicy": "Always",
                                "name": "nginx",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2024-10-23T06:51:13Z",
                        "lastUpdateTime": "2024-10-23T06:51:13Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2024-10-23T06:50:36Z",
                        "lastUpdateTime": "2024-10-23T09:45:20Z",
                        "message": "ReplicaSet \"test-b4b6cf8f6\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2024-10-23T06:50:36Z",
                "generation": 2,
                "labels": {
                    "app": "test",
                    "pod-template-hash": "5746d4c59f"
                },
                "name": "test-5746d4c59f",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "test",
                        "uid": "f2154744-8908-4389-bae9-9a4bdd748f35"
                    }
                ],
                "resourceVersion": "65791",
                "uid": "325397bc-5d4d-4057-a846-c0a00639c3a0"
            },
            "spec": {
                "replicas": 0,
                "selector": {
                    "matchLabels": {
                        "app": "test",
                        "pod-template-hash": "5746d4c59f"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "test",
                            "pod-template-hash": "5746d4c59f"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "image": "nginx",
                                "imagePullPolicy": "Always",
                                "name": "nginx",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "observedGeneration": 2,
                "replicas": 0
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "2"
                },
                "creationTimestamp": "2024-10-23T09:45:18Z",
                "generation": 1,
                "labels": {
                    "app": "test",
                    "pod-template-hash": "b4b6cf8f6"
                },
                "name": "test-b4b6cf8f6",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "test",
                        "uid": "f2154744-8908-4389-bae9-9a4bdd748f35"
                    }
                ],
                "resourceVersion": "65783",
                "uid": "cdda94dc-5140-45f0-a2b5-755ef21802de"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "test",
                        "pod-template-hash": "b4b6cf8f6"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "test",
                            "pod-template-hash": "b4b6cf8f6"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "name",
                                        "value": "test"
                                    }
                                ],
                                "image": "nginx",
                                "imagePullPolicy": "Always",
                                "name": "nginx",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        }
    ],
    "kind": "List",
    "metadata": {
        "resourceVersion": ""
    }
}
``` 